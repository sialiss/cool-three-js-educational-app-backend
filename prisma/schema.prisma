// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     Int            @id @default(autoincrement())
  name                   String
  surname                String
  patronymic             String
  login                  String         @unique
  password               String
  email                  String
  phone                  String
  role                   Role
  groups                 Group[]        @relation("UserGroups")
  completedTheoryLessons TheoryLesson[] @relation("CompletedTheoryLessons")
  completedPracticeLessons PracticeLesson[] @relation("CompletedPracticeLessons")
  allowedLessons         Lesson[]       @relation("AllowedLessons")
}

enum Role {
  user
  admin
  moderator
}

model Group {
  id         Int      @id @default(autoincrement())
  name     String
  startDate  DateTime
  endDate    DateTime
  users      User[]   @relation("UserGroups")
  lessons    Lesson[] @relation("GroupLessons")
}

model Lesson {
  id               Int             @id @default(autoincrement())
  title            String
  description      String
  theory           TheoryLesson?   @relation("LessonToTheory")
  practice         PracticeLesson? @relation("LessonToPractice")

  allowedUsers     User[]          @relation("AllowedLessons")
  allowedGroups    Group[]         @relation("GroupLessons")
}

model TheoryLesson {
  id         Int      @id @default(autoincrement())
  content    String
  lessonId   Int      @unique
  lesson     Lesson   @relation("LessonToTheory", fields: [lessonId], references: [id])
  completedBy User[]  @relation("CompletedTheoryLessons")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model PracticeLesson {
  id          Int      @id @default(autoincrement())
  author      String
  size        Json    
  field       Json
  extras      Json
  goal        Json
  lessonId    Int      @unique
  lesson      Lesson   @relation("LessonToPractice", fields: [lessonId], references: [id])
  completedBy User[]   @relation("CompletedPracticeLessons")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
